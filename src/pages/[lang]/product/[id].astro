---
import BaseHead from '../../../components/BaseHead.astro';
import Navigation from '../../../components/Navigation.astro';
import Footer from '../../../components/Footer.astro';
import Breadcrumb from '../../../components/product/Breadcrumb.astro';
import ProductGallery from '../../../components/product/ProductGallery.astro';
import ProductInfo from '../../../components/product/ProductInfo.astro';
import RelatedProducts from '../../../components/product/RelatedProducts.astro';
import { products } from '../../../data/products';
import { COMPANY_NAME, LOCALES, type Locale } from '../../../consts';
import { useTranslations } from '../../../i18n/utils';

export function getStaticPaths() {
  return LOCALES.flatMap(lang => 
    products.map(product => ({
      params: { lang, id: product.id },
      props: { product, lang },
    }))
  );
}

const { product } = Astro.props;
const { lang } = Astro.params;
const currentLocale = lang as Locale;
const t = useTranslations(currentLocale);

const breadcrumbItems = [
  { name: t('nav.home'), href: `/${currentLocale}` },
  { name: t(`categories.${product.category}`), href: `/${currentLocale}/${product.category.toLowerCase().replace(' ', '-')}` },
  { name: product.title, href: '#' },
];

// Create images array with main image and any additional images
const images = [product.image];
if (product.additionalImages) {
  images.push(...product.additionalImages);
}
---

<!DOCTYPE html>
<html lang={currentLocale}>
  <head>
    <BaseHead 
      title={`${product.title} | ${COMPANY_NAME}`}
      description={product.description}
    />
  </head>
  <body class="min-h-screen bg-gray-50">
    <Navigation />
    
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <Breadcrumb items={breadcrumbItems} />
      
      <div class="lg:grid lg:grid-cols-2 lg:gap-x-8 lg:items-start mt-12">
        {/* Image gallery */}
        <ProductGallery 
          images={images}
          title={product.title}
        />
        
        {/* Product info */}
        <ProductInfo 
          title={product.title}
          price={product.price}
          rating={product.rating}
          description={product.description}
          category={product.category}
          features={product.features}
          specifications={product.specifications}
        />
      </div>

      {/* Related products */}
      <RelatedProducts 
        products={products.filter(p => p.category === product.category && p.id !== product.id)}
        currentProductId={product.id}
      />
    </main>

    <Footer />
  </body>
</html>