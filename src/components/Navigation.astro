---
import { NAV_ITEMS } from '../consts';
import { useTranslations } from '../i18n/utils';
import Logo from './Logo.astro';
import LanguagePicker from './LanguagePicker.astro';
import { getLocaleFromUrl } from '../i18n/utils';

const { pathname } = Astro.url;
const currentLocale = getLocaleFromUrl(pathname);
const t = useTranslations(currentLocale);
---

<header class="bg-white shadow-sm fixed w-full top-0 z-50">
  <nav class="max-w-[1920px] mx-auto px-4 sm:px-6 lg:px-8" aria-label="Top">
    <div class="w-full py-4 flex items-center justify-between">
      <div class="flex items-center flex-grow">
        <a href={`/${currentLocale}`} class="flex-shrink-0 hover:opacity-90 transition-opacity">
          <Logo />
        </a>
        <div class="hidden lg:flex flex-grow justify-center space-x-6 xl:space-x-8 2xl:space-x-12">
          {NAV_ITEMS.map(item => (
            <div class="relative group">
              <a
                href={`/${currentLocale}${item.href}`}
                class="text-sm xl:text-base font-medium text-gray-600 hover:text-gray-900 inline-flex items-center whitespace-nowrap"
              >
                {t(`nav.${item.label}`)}
                {item.submenu && (
                  <svg class="ml-1.5 h-4 w-4 xl:h-5 xl:w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                  </svg>
                )}
              </a>
              {item.submenu && (
                <div class="absolute left-1/2 transform -translate-x-1/2 mt-2 w-64 rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 ease-in-out">
                  <div class="py-2" role="menu" aria-orientation="vertical">
                    {item.submenu.map(subitem => (
                      <a
                        href={`/${currentLocale}${subitem.href}`}
                        class="block px-4 py-2.5 text-sm text-gray-700 hover:bg-gray-50 hover:text-gray-900"
                        role="menuitem"
                      >
                        {t(`nav.${subitem.label}`)}
                      </a>
                    ))}
                  </div>
                </div>
              )}
            </div>
          ))}
        </div>
      </div>
      <div class="flex items-center space-x-4 ml-4">
        <LanguagePicker />
        <!-- Mobile menu button -->
        <button
          type="button"
          class="lg:hidden inline-flex items-center justify-center p-2 rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-blue-500"
          aria-expanded="false"
          id="mobile-menu-button"
        >
          <span class="sr-only">Open main menu</span>
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
    <!-- Mobile menu -->
    <div class="lg:hidden hidden" id="mobile-menu">
      <div class="py-2 space-y-1">
        {NAV_ITEMS.map(item => (
          <div class="w-full">
            <a
              href={`/${currentLocale}${item.href}`}
              class="block px-4 py-2.5 text-base font-medium text-gray-600 hover:text-gray-900 hover:bg-gray-50"
            >
              {t(`nav.${item.label}`)}
            </a>
            {item.submenu && (
              <div class="bg-gray-50">
                {item.submenu.map(subitem => (
                  <a
                    href={`/${currentLocale}${subitem.href}`}
                    class="block px-8 py-2 text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-100"
                  >
                    {t(`nav.${subitem.label}`)}
                  </a>
                ))}
              </div>
            )}
          </div>
        ))}
      </div>
    </div>
  </nav>
</header>
<div class="h-20"></div> <!-- Spacer for fixed header -->

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');

  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      const expanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
      mobileMenuButton.setAttribute('aria-expanded', (!expanded).toString());
      mobileMenu.classList.toggle('hidden');
    });
  }
</script>

<style>
  .group:hover .group-hover\:visible {
    visibility: visible;
  }
  .group:hover .group-hover\:opacity-100 {
    opacity: 1;
  }
  
  /* Ensure dropdown menus don't get cut off */
  .group {
    position: relative;
    padding-bottom: 2rem;
    margin-bottom: -2rem;
  }
  
  /* Smooth transitions for menu items */
  .group a {
    transition: all 0.2s ease-in-out;
  }
  
  /* Ensure dropdowns are above other content */
  .group:hover > div {
    z-index: 50;
  }
</style>